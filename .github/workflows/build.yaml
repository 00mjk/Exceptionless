name: Build
on: [push, pull_request]
env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
      with:
        fetch-depth: 0
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Build Reason
      run: "echo ref: ${{github.ref}} event: ${{github.event_name}}"
    - name: Build Version
      id: version
      uses: thefringeninja/action-minver@2.0.0-preview1
      with:
        tag-prefix: v
    - name: Build
      run: dotnet build --configuration Release
    # - name: Start Services
    #   run: docker-compose -f docker-compose.services.yml up -d && docker-compose -f docker-compose.services.yml up ready
    # - name: Run Tests
    #   run: dotnet test --configuration Release --results-directory artifacts --no-build --logger:trx
    - name: Install Helm
      if: github.event_name != 'pull_request'
      uses: azure/setup-helm@v1
    - name: Build Docker Images
      if: github.event_name != 'pull_request'
      run: |
        docker build --target api -t ex-api .
        docker build --target job -t ex-job .
    - uses: azure/docker-login@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push CI Packages
      if: github.event_name != 'pull_request'
      run: |
        # tag and push docker image
        for image in {"api","job"}; do
          for tag in {${{ steps.version.outputs.version }},latest}; do
            docker tag ex-$image exceptionless/$image-ci:$tag
            docker push exceptionless/$image-ci:$tag
          done
        done
    - name: Publish Release Packages
      if: startsWith(github.ref, 'refs/tags/v')
      run: echo "Push docker images to Docker Hub"
    - name: Deploy Changes to Development Environment
      if: github.event_name != 'pull_request'
      run: echo "Run Helm Upgrade to dev env"
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: artifacts
        path: artifacts
