version: '{build}'
image: ubuntu
clone_depth: 2

services:
  - docker

environment:
  API_DOCKER_IMAGE: api-ci
  JOB_DOCKER_IMAGE: job-ci

pull_requests:
  do_not_increment_build_number: true

init:
  - git config --global core.autocrlf input

before_build:
  - |
    VERSION=$(sed -n 's/.*<VersionPrefix>\([^<]*\)<\/VersionPrefix>.*/\1/p' <<< cat ./build/common.props)
    if [ $APPVEYOR_REPO_TAG != "true" ]; then
      BUILD_NUMBER="$APPVEYOR_BUILD_NUMBER-pre"
      FULL_VERSION="$VERSION.$BUILD_NUMBER"
      echo "Version: $FULL_VERSION"
    else
      BUILD_NUMBER=$APPVEYOR_BUILD_NUMBER
      FULL_VERSION="$VERSION.$BUILD_NUMBER"
      echo "Version: $FULL_VERSION Tag: $APPVEYOR_REPO_TAG_NAME"
    fi
    appveyor UpdateBuild -Version $FULL_VERSION

install:
  - |
    curl https://storage.googleapis.com/kubernetes-helm/helm-v2.11.0-linux-amd64.tar.gz -o helm.tar.gz
    tar -zxvf helm.tar.gz
    sudo mv linux-amd64/helm /usr/local/bin/helm

build_script:
  - docker build --target testrunner -t exceptionless:test --build-arg build=${BUILD_NUMBER} .
  - docker run -d -m 2g -p 9200:9200 -p 9300:9300 -e discovery.type=single-node -e xpack.security.enabled=false -e ES_JAVA_OPTS='-Xms512m -Xmx512m' slideroom/elasticsearch:98
  - docker run -e APPVEYOR_API_URL --net=host -v $(pwd)/artifacts:/app/artifacts exceptionless:test
  - docker build --target api -t $API_DOCKER_IMAGE --build-arg build=${BUILD_NUMBER} .
  - docker build --target job -t $JOB_DOCKER_IMAGE --build-arg build=${BUILD_NUMBER} .

deploy_script:
  - echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
  - |
    # tag and push docker image
    for image in {$API_DOCKER_IMAGE,$JOB_DOCKER_IMAGE}; do  
      for tag in {$FULL_VERSION,latest}; do
        docker tag $image exceptionless/$image:$tag
        docker push exceptionless/$image:$tag
      done
    done
  - |
    # deploy latest images to k8s cluster
    az login --service-principal --username $AZ_USERNAME --password $AZ_PASSWORD --tenant $AZ_TENANT
    az aks get-credentials --resource-group exceptionless-test --name ex-k8s-test2
    helm upgrade --set "api.image.tag=$FULL_VERSION" --set "jobs.image.tag=$FULL_VERSION" --reuse-values exceptionless-test ./exceptionless

artifacts:
  - path: artifacts/*.trx
    name: Test Results

notifications:
  - provider: Slack
    auth_token:
      secure: GniMpFE62HprSyQNQoej/VSBnxn2GNnTrca3BnF8+ikMdqduO4Ts4t297teZF6wDAmGwnOtXusctUla8+WxLFkIztvVCS2Z1RG/DvEDYoc0=
    channel: '#notifications'
