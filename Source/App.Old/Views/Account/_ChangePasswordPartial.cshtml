@using Exceptionless.App.Extensions
@model Exceptionless.App.Models.Account.LocalPasswordModel

@using (Html.BeginForm("ManagePassword", "Account", FormMethod.Post, new { @class = "form-horizontal" })) {
    @*@Html.AntiForgeryToken()*@
    @Html.BeginControlGroupFor(m => m.OldPassword)
        @Html.LabelFor(m => m.OldPassword, new { @class = "control-label" })
        <div class="controls">
            @Html.PasswordFor(m => m.OldPassword)
            @Html.ValidationMessageFor(m => m.OldPassword, null, new { @class = "help-inline" })
        </div> <!-- /controls -->
    @Html.EndControlGroup()

    @Html.BeginControlGroupFor(m => m.NewPassword)
        @Html.LabelFor(m => m.NewPassword, new { @class = "control-label" })
        <div class="controls">
            @Html.PasswordFor(m => m.NewPassword)
            @Html.ValidationMessageFor(m => m.NewPassword, null, new { @class = "help-inline" })
        </div> <!-- /controls -->
    @Html.EndControlGroup()

    @Html.BeginControlGroupFor(m => m.ConfirmPassword)
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })	
        <div class="controls">
            @Html.PasswordFor(m => m.ConfirmPassword)
            @Html.ValidationMessageFor(m => m.ConfirmPassword, null, new { @class = "help-inline" })
        </div> <!-- /controls -->
    @Html.EndControlGroup()

    <div class="form-actions">
        <button type="submit" class="btn btn-primary" data-bind="command: updatePasswordCommand, template: { name: 'command-button-template', data: { command: updatePasswordCommand, name: 'Change password', executingName: 'Changing password' } }">Change password</button>
        @Html.ActionLink("Cancel", "Index", "Project", null, new { @class = "btn" })
    </div> <!-- /form-actions -->
}
