@using Exceptionless.App.Extensions
@model Exceptionless.App.Models.Account.ManageModel
@{
    ViewBag.Title = "My Account";
    Layout = "~/Views/Shared/_AppLayout.cshtml";

    var isVerified = (bool)ViewBag.IsVerified;
}

<div class="row">
    <div class="span9">
        <div class="widget" id="manage-account">
            <div class="widget-header">
                <i class="fa fa-user"></i>
                <h3>My Account</h3>
            </div> <!-- /widget-header -->

            <div class="widget-content">
                <div class="tabbable">
                    <ul class="nav nav-tabs" data-tabs="tabs" id="account-tabs">
                        <li class="active">
                            <a data-toggle="tab" href="#default">Profile Information</a>
                        </li>
                        <li><a data-toggle="tab" href="#password">Password</a></li>
                        <li><a data-toggle="tab" href="#logins">External Logins</a></li>
                    </ul>

                    <div class="tab-content">
                        <div class="tab-pane active" id="default">
                            @using (Html.BeginForm("Manage", "Account", FormMethod.Post, new { @class = "form-horizontal" })) {
                                @*@Html.AntiForgeryToken() *@

                                @Html.BeginControlGroupFor(m => m.FullName)
                                    @Html.LabelFor(m => m.FullName, new { @class = "control-label" })
                                    <div class="controls">
                                        @Html.TextBoxFor(m => m.FullName, new { @class = "input-large", placeholder = "Your first and last name" })
                                        @Html.ValidationMessageFor(m => m.FullName, null, new { @class = "help-inline" })
                                    </div> <!-- /controls -->
                                @Html.EndControlGroup()

                                @Html.BeginControlGroupFor(m => m.EmailAddress)
                                    @Html.LabelFor(m => m.EmailAddress, new { @class = "control-label" })	
                                    <div class="controls">
                                        @Html.TextBoxFor(m => m.EmailAddress, new { @class = "input-large", placeholder = "Email", type = "email" })
                                        @Html.ValidationMessageFor(m => m.EmailAddress, null, new { @class = "help-inline" })
                                        <p style="display: none;" data-bind="visible: !isVerified()" class="info-block">Email not verified. <a href="/account/resend-verification-email" data-bind="click: resendVerificationEmail">Resend</a> verification email.</p>
                                    </div> <!-- /controls -->
                                @Html.EndControlGroup()
                                
                                @Html.BeginControlGroupFor(m => m.EmailNotificationsEnabled)
                                    <div class="controls">
                                        @Html.BeginLabelFor(m => m.EmailNotificationsEnabled, new { @class = "checkbox" })
                                            <input id="EmailNotificationsEnabled" name="EmailNotificationsEnabled" type="checkbox" data-bind="checked: emailNotificationsEnabled" />
                                            Enable email notifications
                                        @Html.EndLabel()
                                    </div>
                                @Html.EndControlGroup()

                                <div class="form-actions">
                                    <button type="submit" class="btn btn-primary" data-bind="command: saveCommand, template: { name: 'command-button-template', data: { command: saveCommand, name: 'Save', executingName: 'Saving' } }">Save</button>
                                    @Html.ActionLink("Cancel", "Index", "Project", null, new { @class = "btn" })
                                </div> <!-- /form-actions -->
                            }
                        </div>

                        <div class="tab-pane" id="password">
                            @if (ViewBag.HasLocalPassword) {
                                @Html.Partial("_ChangePasswordPartial")
                            } else { 
                                @Html.Partial("_SetPasswordPartial")
                            }
                        </div>
                        
                        <div class="tab-pane" id="logins">
                            @Html.Action("RemoveExternalLogins")

                            <h4>Add an external login</h4>
                            @Html.Action("ExternalLoginsList", new { ReturnUrl = ViewBag.ReturnUrl })
                        </div>
                    </div>
                </div>
            </div> <!-- /widget-content -->
        </div> <!-- /widget -->
    </div> <!-- /span9 -->
</div> <!-- /row -->

@section FooterContent {
    @Html.Partial("_CommandButtonTemplate")
    <script type="text/javascript">
        $(document).ready(function() {
            var vm = new exceptionless.account.ManageAccountViewModel('manage-account', 'main-nav', 'account-tabs', '#default > form', '#password > form', @Model.EmailNotificationsEnabled.ToString().ToLower(), @isVerified.ToString().ToLower());
        });
    </script>   
}