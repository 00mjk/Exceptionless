version: 2
jobs:
  build:
    machine:
      docker_layer_caching: true
    environment:
      - API_DOCKER_IMAGE=api-ci
      - JOB_DOCKER_IMAGE=job-ci
    steps:
      - checkout
      - run:
          name: Integration Tests
          command: | 
            docker run -d -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" -e "ES_JAVA_OPTS=-Xms750m -Xmx750m" slideroom/elasticsearch:98
            docker build --target testrunner -t exceptionless:test .
            mkdir TestResults
            docker run --network host -v $(pwd)/TestResults:/app/tests/Exceptionless.Tests/TestResults exceptionless:test
      - store_test_results:
          path: TestResults
      - run:
          name: Build jobs docker image
          command: docker build --target job -t $JOB_DOCKER_IMAGE .
      - run:
          name: Build API docker image
          command: docker build --target api -t $API_DOCKER_IMAGE .
      - deploy:
          name: Push docker images
          command: |
            # Login to Docker
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin

            # Tag and push docker image
            for image in {$API_DOCKER_IMAGE,$JOB_DOCKER_IMAGE}; do  
              for tag in {$CIRCLE_BUILD_NUM,latest}; do
                (
                  docker tag $image exceptionless/$image:$tag
                  docker push exceptionless/$image:$tag
                ) &
              done
            done
            wait

  deploy-test:
    docker:
      - image: microsoft/azure-cli:latest
    steps:
      - checkout
      - run:
          name: Login to Azure
          command: az login --service-principal --username $AZ_USERNAME --password $AZ_PASSWORD --tenant $AZ_TENANT
      - run:
          name: Login to Azure
          command: az aks get-credentials --resource-group exceptionless-test --name ex-k8s-test2
      - run:
          name: Deploy new images
          working_directory: k8s
          command: |
            curl https://storage.googleapis.com/kubernetes-helm/helm-v2.11.0-linux-amd64.tar.gz -o helm.tar.gz
            tar -zxvf helm.tar.gz
            mv linux-amd64/helm /usr/local/bin/helm
            helm upgrade --set "api.image.tag=$CIRCLE_BUILD_NUM" --set "jobs.image.tag=$CIRCLE_BUILD_NUM" --reuse-values exceptionless-test ./exceptionless

  deploy-prod:
    docker:
      - image: microsoft/azure-cli:latest
    steps:
      - checkout
      - run:
          name: Login to Azure
          command: az login --service-principal --username $AZ_USERNAME --password $AZ_PASSWORD --tenant $AZ_TENANT
      - run:
          name: Login to Azure
          command: az aks get-credentials --resource-group exceptionless-test --name ex-k8s-test2
      - run:
          name: Deploy new images
          working_directory: k8s
          command: |
            curl https://storage.googleapis.com/kubernetes-helm/helm-v2.11.0-linux-amd64.tar.gz -o helm.tar.gz
            tar -zxvf helm.tar.gz
            mv linux-amd64/helm /usr/local/bin/helm
            helm upgrade --set "api.image.tag=$CIRCLE_BUILD_NUM" --set "jobs.image.tag=$CIRCLE_BUILD_NUM" --reuse-values exceptionless-test ./exceptionless

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy-test:
          requires:
            - build
          filters:
            branches:
              only: /feature\/.*/
      - deploy-prod:
          requires:
            - build
          filters:
            branches:
              only: master